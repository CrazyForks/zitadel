name: Integration test API

on: 
  workflow_call:
    inputs:
      node_version:
        required: true
        type: string
      nx_cache_key:
        required: true
        type: string
      nx_cache_path:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: true

jobs:
  postgres:
    runs-on:
      group: zitadel-public
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: zitadel
          PGUSER: zitadel
          POSTGRES_DB: zitadel
          POSTGRES_HOST_AUTH_METHOD: trust
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --health-start-period 10s
      cache:
        image: redis:latest
        ports:
          - 6379:6379
    steps:
      - uses: actions/checkout@v4
        with:
          filter: tree:0
          fetch-depth: 0      
      - uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
      - name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - name: Restore Nx cache
        uses: actions/cache/restore@v4
        id: nx_cache
        with:
          path: ${{ inputs.nx_cache_path }}
          key: ${{ inputs.nx_cache_key }}
          fail-on-cache-miss: true
      - name: Restore generated API files from Nx cache
        run: pnpm nx run @zitadel/api:generate
      - name: test
        env:
          ZITADEL_MASTERKEY: MasterkeyNeedsToHave32Characters
        run: make api_integration_test
      - name: upload server logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-server-logs
          path: |
           tmp/zitadel.log
           tmp/race.log.*
      - name: publish coverage
        uses: codecov/codecov-action@v4.3.0
        with:
          file: profile.cov
          name: api-integration-tests-postgres
          flags: api-integration-tests-postgres
          token: ${{ secrets.CODECOV_TOKEN }}
