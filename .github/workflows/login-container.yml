name: Login Container

on:
  workflow_call:
    inputs:
      login_build_image_name:
        description: 'The image repository name of the standalone login image'
        type: string
        required: true
      node_version:
        required: true
        type: string
    outputs:
      login_build_image:
        description: 'The full image tag of the standalone login image'
        value: ${{ inputs.login_build_image_name }}:${{ github.sha }}

permissions:
  packages: write

env:
  default_labels: |
    org.opencontainers.image.documentation=https://zitadel.com/docs
    org.opencontainers.image.vendor=CAOS AG
    org.opencontainers.image.licenses=MIT

jobs:
  login-container:
    name: Build Login Container
    runs-on: ubuntu-latest
    permissions:
      packages: write
    outputs:
      login_build_image: ${{ steps.short-sha.outputs.login_build_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Login meta
        id: login-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.login_build_image_name }}
          labels: ${{ env.default_labels}}
          annotations: |
            manifest:org.opencontainers.image.licenses=MIT
          tags: |
            type=sha,prefix=,format=long
      - name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@v3
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - run: pnpm install --frozen-lockfile
      - uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/apps/login/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/pnpm-lock.yaml') }}-
      - run: pnpm nx build:bake login --file cwd://${{ steps.login-meta.outputs.bake-file }} --push
