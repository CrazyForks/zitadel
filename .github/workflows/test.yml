name: Quality
on:
  pull_request:
jobs:
  quality:
    name: Ensure Quality
    runs-on: depot-ubuntu-22.04-8
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/zitadel/login
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - uses: depot/setup-action@v1
        with:
          oidc: true
      - name: Restore Run Caches
        uses: actions/cache/restore@v4
        id: run-caches-restore
        with:
          path: ${{ runner.temp }}/login-make-cache
          key: login-make-cache-${{ github.ref == 'refs/heads/main' && 'latest' || fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          restore-keys: login-make-cache-latest
      - run: make login-quality
        env:
          # latest if branch is main, otherwise image version which is the pull request number
          BAKE_CLI: depot bake --file docker-bake.hcl --file docker-bake-ci.hcl
          DEPOT_PROJECT_ID: jp837jn3fm
          REF_TAG: ${{ github.ref == 'refs/heads/main' && 'latest' || fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          CACHE_DIR: ${{ runner.temp }}/login-make-cache
      - name: Save Run Caches
        uses: actions/cache/save@v4
        with:
          path: ${{ runner.temp }}/login-make-cache
          key: ${{ steps.run-caches-restore.outputs.cache-primary-key }}
        if: always()
