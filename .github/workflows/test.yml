name: Quality
on:
  pull_request:
  workflow_dispatch:
    inputs:
      ref-tag:
        description: 'The tag to use for the build cache'
        required: false
        default: 'latest'
      clean-run-caches:
        description: 'Whether to clean the run caches'
        required: false
        default: 'true'
jobs:
  quality:
    name: Ensure Quality
    runs-on: depot-ubuntu-22.04-8
    timeout-minutes: 30
    permissions:
      contents: read
      id-token: write
      packages: write
      actions: write
    env:
      CACHE_DIR: /tmp/login-run-caches
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/zitadel/login
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
      - uses: depot/setup-action@v1
        with:
          oidc: true
      - name: Restore Run Caches
        uses: actions/cache/restore@v4
        id: run-caches-restore
        with:
          path: ${{ env.CACHE_DIR }}
          key: login-run-caches-${{ env.DOCKER_METADATA_OUTPUT_VERSION }}
          restore-keys: login-run-caches-latest
      - name: Show Run Caches
        run: make show-run-caches
      - run: make login-quality
        env:
          # latest if branch is main, otherwise image version which is the pull request number
          BAKE_CLI: depot bake
          DEPOT_PROJECT_ID: jp837jn3fm
          FORCE: ${{ github.event.inputs.clean-run-caches == 'true' }}
      - name: Save Run Caches
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ steps.run-caches-restore.outputs.cache-primary-key }}
#        if: always()
