name: Integration test core

on: 
  workflow_call: 
    inputs:
      login_build_image:
        required: true
        type: string

permissions:
  packages: write

jobs:
  login-integration-test:
    name: login-integration-test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Dev Container CLI
        run: npm install -g @devcontainers/cli@0.80.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Print Config
        run: COMPOSE_BAKE=1 docker compose --file  .devcontainer/base/docker-compose.yaml --file .devcontainer/login-integration-ci/docker-compose.yaml config login-integration
        env:
          LOGIN_TAG: ${{ inputs.login_build_image }}
      - name: Pull Login Build Image
        run: docker pull ${{ inputs.login_build_image }}
      - name: Run Integration Tests against the Login and a Mocked Zitadel API
        run: npm run devcontainer:integration:login:up
        env:
          LOGIN_TAG: ${{ inputs.login_build_image }}
          DOCKER_BUILDKIT: 1
          BUILDKIT_PROGRESS: plain
          # Add verbose logging
          COMPOSE_LOG_LEVEL: DEBUG
          DEVCONTAINER_LOG_LEVEL: trace
      - name: Show Compose Status
        if: failure()
        run: docker compose --file .devcontainer/base/docker-compose.yaml --file .devcontainer/login-integration-ci/docker-compose.yaml ps
      - name: Show Container Logs
        if: failure()
        run: docker compose --file .devcontainer/base/docker-compose.yaml --file .devcontainer/login-integration-ci/docker-compose.yaml logs --timestamps --no-color --tail 100 login-integration
      - name: Inspect All Failed Containers
        if: failure()
        run: |
          docker ps -a --filter "status=exited" --filter "status=created" --format "table {{.ID}}\t{{.Names}}\t{{.Status}}\t{{.Image}}"
          for container in $(docker ps -a --filter "status=exited" --filter "status=created" -q); do
            echo "Inspecting container $container"
            docker inspect $container || true
          done
