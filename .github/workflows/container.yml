name: Container

on:
  workflow_call:
    inputs:
      build_image_name_api:
        required: true
        type: string
      build_image_name_login:
        required: true
        type: string
      node_version:
        required: true
        type: string        
    outputs:
      build_image_api:
        value: '${{ inputs.build_image_name_api }}:${{ github.sha }}'
      build_image_login:
        value: '${{ inputs.build_image_name_login }}:${{ github.sha }}'

permissions:
  packages: write

env:
  default_labels: |
    org.opencontainers.image.documentation=https://zitadel.com/docs
    org.opencontainers.image.vendor=CAOS AG

jobs:
  build-api:
    name: api
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - 
        uses: actions/checkout@v4
      -
        name: Scratch meta
        id: scratch-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      -
        name: Debug meta
        id: debug-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=-debug,format=long
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        uses: actions/download-artifact@v4
        with:
          path: .artifacts
          pattern: zitadel-linux-*
          merge-multiple: true
      -
        name: Unpack executables
        run: |
          mkdir -p ./artifacts/linux/amd64 ./artifacts/linux/arm64
          tar -xzf .artifacts/zitadel-linux-amd64.tar.gz --strip-components=1 -C ./artifacts/linux/amd64/ zitadel-linux-amd64/zitadel
          tar -xzf .artifacts/zitadel-linux-arm64.tar.gz --strip-components=1 -C ./artifacts/linux/arm64/ zitadel-linux-arm64/zitadel
      - 
        name: Debug
        id: build-debug
        uses: docker/build-push-action@v6
        timeout-minutes: 5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: artifact
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.debug-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_api }},name-canonical=true
      - 
        name: Scratch
        id: build-scratch
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: final
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.scratch-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_api }},name-canonical=true

  build-login:
    name: login
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - 
        uses: actions/checkout@v4
      -
        name: Login meta
        id: login-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_login }}
          labels: |
            org.opencontainers.image.licenses=MIT
            ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - 
        name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - 
        name: Install dependencies
        run: pnpm install --frozen-lockfile
      - 
        name: Build Login
        run: pnpm nx run @zitadel/login:build
      - 
        name: Login
        id: build-login
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: apps/login
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          push: true
          labels: ${{ steps.login-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_login }},name-canonical=true          
