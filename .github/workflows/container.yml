name: Container

on:
  workflow_call:
    inputs:
      build_image_name_api:
        required: true
        type: string
      build_image_name_login:
        required: true
        type: string
      node_version:
        required: true
        type: string        
    outputs:
      build_image_api:
        value: '${{ inputs.build_image_name_api }}:${{ github.sha }}'
      build_image_login:
        value: '${{ inputs.build_image_name_login }}:${{ github.sha }}'

permissions:
  packages: write

env:
  default_labels: |
    org.opencontainers.image.documentation=https://zitadel.com/docs
    org.opencontainers.image.vendor=CAOS AG

jobs:
  build:
    name: zitadel
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64,arm64]
    steps:
      - 
        uses: actions/checkout@v4
      -
        name: Scratch meta
        id: scratch-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      -
        name: Debug meta
        id: debug-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_api }}
          labels: ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=-debug,format=long
      -
        name: Login meta
        id: login-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ inputs.build_image_name_login }}
          labels: |
            org.opencontainers.image.licenses=MIT
            ${{ env.default_labels}}
          tags: |
            type=sha,prefix=,suffix=,format=long
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - 
        uses: actions/download-artifact@v4
        with:
          path: .artifacts
          name: zitadel-linux-${{ matrix.arch }}
      -
        name: Unpack executable
        run: |
          tar -xvf .artifacts/zitadel-linux-${{ matrix.arch }}.tar.gz
          mv zitadel-linux-${{ matrix.arch }}/zitadel ./zitadel
      - 
        name: Set up pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false
      - 
        name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node_version }}
          cache: "pnpm"
      - 
        name: Install dependencies
        run: pnpm install --frozen-lockfile
      - 
        name: Build Login
        run: pnpm nx run login:build
      - 
        name: Debug
        id: build-debug
        uses: docker/build-push-action@v6
        timeout-minutes: 5
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: artifact
          platforms: linux/${{ matrix.arch }}
          push: true
          labels: ${{ steps.debug-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_api }},push-by-digest=true,name-canonical=true,push=true
      - 
        name: Scratch
        id: build-scratch
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: apps/api/Dockerfile
          target: final
          platforms: linux/${{ matrix.arch }}
          push: true
          labels: ${{ steps.scratch-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_api }},push-by-digest=true,name-canonical=true,push=true
      - 
        name: Login
        id: build-login
        uses: docker/build-push-action@v6
        timeout-minutes: 3
        with:
          context: apps/login
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/${{ matrix.arch }}
          push: true
          labels: ${{ steps.login-meta.outputs.labels }}
          outputs: type=image,name=${{ inputs.build_image_name_login }},push-by-digest=true,name-canonical=true,push=true
      -
        name: Export debug digest
        run: |
          mkdir -p /tmp/digests/debug
          digest="${{ steps.build-debug.outputs.digest }}"
          touch "/tmp/digests/debug/${digest#sha256:}"
      -
        name: Export scratch digest
        run: |
          mkdir -p /tmp/digests/scratch
          digest="${{ steps.build-scratch.outputs.digest }}"
          touch "/tmp/digests/scratch/${digest#sha256:}"
      -
        name: Export login digest
        run: |
          mkdir -p /tmp/digests/login
          digest="${{ steps.build-login.outputs.digest }}"
          touch "/tmp/digests/login/${digest#sha256:}"
      -
        name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ matrix.arch }}
          path: /tmp/digests
          if-no-files-found: error
          retention-days: 1
  
  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    strategy:
      fail-fast: false
      matrix:
        image: [scratch, debug, login]
        include:
          - image: scratch
            suffix: ''
            build_image_name: ${{ inputs.build_image_name_api }}
          - image: debug
            suffix: '-debug'
            build_image_name: ${{ inputs.build_image_name_api }}
          - image: login
            suffix: ''
            build_image_name: ${{ inputs.build_image_name_login }}
    steps:
      -
        name: Download digests
        uses: actions/download-artifact@v4
        with:
          pattern: digests-*
          path: /tmp/digests
          merge-multiple: true
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Docker registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: build-meta
        uses: docker/metadata-action@v5
        with:
          images: '${{ matrix.build_image_name }}'
          tags: |
            type=sha,prefix=,suffix=${{ matrix.suffix }},format=long
      -
        name: Create build manifest list and push
        working-directory: /tmp/digests/${{ matrix.image }}
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< '${{ steps.build-meta.outputs.json }}') \
            $(printf '${{ matrix.build_image_name }}@sha256:%s ' *)
      -
        name: Inspect build image
        run: |
          docker buildx imagetools inspect ${{ matrix.build_image_name }}:${{ github.sha }}${{ matrix.suffix }}

