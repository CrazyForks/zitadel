syntax = "proto3";

import "zitadel/object/v2beta/object.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

package zitadel.metadata.v2beta;

option go_package ="github.com/zitadel/zitadel/pkg/grpc/metadata/v2beta";

message Metadata {
    zitadel.object.v2beta.Details details = 1;
    string key = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "metadata key",
            example: "\"key1\"";
        }
    ];
    bytes value = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "metadata value is base64 encoded, make sure to decode to get the value",
            example: "\"VGhpcyBpcyBteSBmaXJzdCB2YWx1ZQ==\"";
        }
    ];
}

message MetadataQuery {
    oneof query {
        option (validate.required) = true;
        MetadataKeyQuery key_query = 1;
    }
}

message MetadataKeyQuery {
    string key = 1 [
        (validate.rules).string = {max_len: 200},
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            example: "\"key\""
        }
    ];
    zitadel.object.v2beta.TextQueryMethod method = 2 [
        (validate.rules).enum.defined_only = true,
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "defines which text equality method is used";
        }
    ];
}
