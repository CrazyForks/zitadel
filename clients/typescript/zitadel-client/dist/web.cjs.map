{"version":3,"sources":["/home/armond/Code/src/github.com/zitadel/zitadel/clients/typescript/zitadel-client/dist/web.cjs","../src/web.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACA;ACHA,qDAAuC;AAQhC,SAAS,qBAAA,CAAsB,KAAA,EAAe,IAAA,EAA4B;AAC/E,EAAA,OAAO,gDAAA;AAAuB,IAC5B,GAAG,IAAA;AAAA,IACH,YAAA,EAAc,CAAC,GAAI,IAAA,CAAK,aAAA,GAAgB,CAAC,CAAA,EAAI,iEAAA,KAAuC,CAAC;AAAA,EACvF,CAAC,CAAA;AACH;ADFA;AACE;AACF,sDAAC","file":"/home/armond/Code/src/github.com/zitadel/zitadel/clients/typescript/zitadel-client/dist/web.cjs","sourcesContent":[null,"import { GrpcTransportOptions } from \"@connectrpc/connect-node\";\nimport { createGrpcWebTransport } from \"@connectrpc/connect-web\";\nimport { NewAuthorizationBearerInterceptor } from \"./interceptors.js\";\n\n/**\n * Create a client transport using grpc web with the given token and configuration options.\n * @param token\n * @param opts\n */\nexport function createClientTransport(token: string, opts: GrpcTransportOptions) {\n  return createGrpcWebTransport({\n    ...opts,\n    interceptors: [...(opts.interceptors || []), NewAuthorizationBearerInterceptor(token)],\n  });\n}\n"]}