{"version":3,"sources":["/home/armond/Code/src/github.com/zitadel/zitadel/clients/typescript/zitadel-client/dist/v2.cjs","../src/v2.ts"],"names":[],"mappings":"AAAA;AACE;AACF,wDAA6B;AAC7B;AACA;ACJA,8CAAuB;AACvB,+FAA+B;AAC/B,mFAAwC;AACxC,4EAAqC;AACrC,sFAA4B;AAC5B,mFAAoC;AACpC,sFAA4B;AAC5B,+FAA+B;AAC/B,kGAAgC;AAChC,sFAA4B;AAIrB,IAAM,wBAAA,EAA0B,+CAAA,8BAA2B,CAAA;AAC3D,IAAM,4BAAA,EAA8B,+CAAA,sCAA+B,CAAA;AACnE,IAAM,2BAAA,EAA6B,+CAAA,oCAA8B,CAAA;AACjE,IAAM,wBAAA,EAA0B,+CAAA,8BAA2B,CAAA;AAC3D,IAAM,wBAAA,EAA0B,+CAAA,8BAA2B,CAAA;AAC3D,IAAM,gCAAA,EAAkC,+CAAA,qCAAmC,CAAA;AAC3E,IAAM,2BAAA,EAA6B,+CAAA,oCAA8B,CAAA;AACjE,IAAM,uBAAA,EAAyB,+CAAA,yCAAuC,CAAA;AAEtE,SAAS,UAAA,CAAW,KAAA,EAA2B;AACpD,EAAA,OAAO,8BAAA,iCAAO,EAAsB;AAAA,IAClC,aAAA,EAAe,MAAA,EAAQ,EAAE,IAAA,EAAM,OAAA,EAAS,KAAA,EAAO,MAAM,EAAA,EAAI,EAAE,IAAA,EAAM,UAAA,EAAY,KAAA,EAAO,KAAK;AAAA,EAC3F,CAAC,CAAA;AACH;ADEA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACF,0hBAAC","file":"/home/armond/Code/src/github.com/zitadel/zitadel/clients/typescript/zitadel-client/dist/v2.cjs","sourcesContent":[null,"import { create } from \"@bufbuild/protobuf\";\nimport { FeatureService } from \"@zitadel/proto/zitadel/feature/v2/feature_service_pb.js\";\nimport { IdentityProviderService } from \"@zitadel/proto/zitadel/idp/v2/idp_service_pb.js\";\nimport { RequestContextSchema } from \"@zitadel/proto/zitadel/object/v2/object_pb.js\";\nimport { OIDCService } from \"@zitadel/proto/zitadel/oidc/v2/oidc_service_pb.js\";\nimport { OrganizationService } from \"@zitadel/proto/zitadel/org/v2/org_service_pb.js\";\nimport { SAMLService } from \"@zitadel/proto/zitadel/saml/v2/saml_service_pb.js\";\nimport { SessionService } from \"@zitadel/proto/zitadel/session/v2/session_service_pb.js\";\nimport { SettingsService } from \"@zitadel/proto/zitadel/settings/v2/settings_service_pb.js\";\nimport { UserService } from \"@zitadel/proto/zitadel/user/v2/user_service_pb.js\";\n\nimport { createClientFor } from \"./helpers.js\";\n\nexport const createUserServiceClient = createClientFor(UserService);\nexport const createSettingsServiceClient = createClientFor(SettingsService);\nexport const createSessionServiceClient = createClientFor(SessionService);\nexport const createOIDCServiceClient = createClientFor(OIDCService);\nexport const createSAMLServiceClient = createClientFor(SAMLService);\nexport const createOrganizationServiceClient = createClientFor(OrganizationService);\nexport const createFeatureServiceClient = createClientFor(FeatureService);\nexport const createIdpServiceClient = createClientFor(IdentityProviderService);\n\nexport function makeReqCtx(orgId: string | undefined) {\n  return create(RequestContextSchema, {\n    resourceOwner: orgId ? { case: \"orgId\", value: orgId } : { case: \"instance\", value: true },\n  });\n}\n"]}