{
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "name": "@zitadel/api",
    "projectType": "application",
    "targets": {
        "build": {
            "description": "Build the Zitadel API application",
            "command": "make api_build compile_pipeline",
            "inputs": [
                "{workspaceRoot}/cmd/**/*",
                "{workspaceRoot}/internal/**/*",
                "{workspaceRoot}/proto/**/*",
                "{workspaceRoot}/pkg/**/*",
                "{workspaceRoot}/Makefile",
                "{workspaceRoot}/go.mod",
                "{workspaceRoot}/go.sum",
                "{workspaceRoot}/main.go"
            ],
            "outputs": [
                "{workspaceRoot}/zitadel"
            ],
            "dependsOn": [
                "@zitadel/console:build"
            ]
        },
        "init-and-setup": {
            "description": "Setup the Zitadel API application. This writes the login-client.pat if run against a database from scratch",
            "command": "nx run @zitadel/devcontainer:compose run --build --no-deps api-init api-setup",
            "outputs": [
                "{workspaceRoot}/login-client.pat"
            ]
        },
        "start": {
            "description": "Start the Zitadel API application",
            "continuous": true,
            "command": "nx run @zitadel/devcontainer:compose up --build --watch --no-deps api"
        },
        "dev": {
            "description": "Develop the Zitadel API application. Like the `start` target, but can start the application yourself in debug mode using your IDE. Run `nx show project api --json | jq '.targets.start.options'` to see how to configure your IDE",
            "dependsOn": [
                "build",
                "start-db",
                "start-init",
                "start-setup",
                "local-sa-token",
                "@zitadel/login:build",
                "@zitadel/login:start"
            ]
        }
    }
}