{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "targets": {
    "env-local": {
      "description": "Create environment files with ZITADEL service user token",
      "cache": true,
      "outputs": [
        "{projectRoot}/.env.local"
      ],
      "dependsOn": [
        "@zitadel/core:start-setup"
      ],
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": [
          "TOKEN=$(cat ../../login-client.pat) && echo \"ZITADEL_SERVICE_USER_TOKEN=$TOKEN\" > .env.local"
        ],
        "parallel": false
      }
    },
    "build": {
      "description": "Build the Next.js application in standalone mode for production. (Cache is disabled because it doesn't work https://github.com/nrwl/nx/issues/27724)",
      "cache": true,
      "dependsOn": [
        "env-local",
        "^build"
      ],
      "outputs": [
        "{projectRoot}/.next/standalone"
      ]
    },
    "dev": {
      "description": "Start the Next.js development server with Zitadel core backend",
      "dependsOn": [
        "env-local",
        "@zitadel/core:start"
      ]
    },
    "start": {
      "description": "Start the standalone production build",
      "dependsOn": [
        "env-local",
        "@zitadel/core:start",
        "build"
      ]
    },
    "build-docker": {
      "description": "Build Docker image for the login application",
      "inputs": [
        "docker"
      ],
      "dependsOn": [
        "build"
      ]
    },
    "start-docker": {
      "description": "Start the application in Docker container",
      "continuous": true,
      "options": {
        "args": [
          "--publish",
          "3000:3000"
        ]
      }
    },
    "check": {
      "description": "Run code quality checks (linting, formatting, testing and building)"
    },
    "lint": {
      "description": "Run all linters",
      "dependsOn": [
        "lint-check-*"
      ]
    },
    "lint-check-prettier": {
        "inputs": [
          "prettier",
          "{projectRoot}/constants/**/*",
          "{projectRoot}/src/**/*",
          "{projectRoot}/locales/**/*",
          "{projectRoot}/scripts/healthcheck.js"
        ]
    },
    "test-unit": {
      "description": "Run unit tests",
      "dependsOn": [
        "^build"
      ]
    },
    "test-integration": {
      "description": "Run integration tests with Cypress",
      "dependsOn": [
        "@zitadel/login-core-mock:start-docker",
        "start-integration",
        "build"
      ],
      "inputs": [
        "{projectRoot}/integration/integration/**",
        "{projectRoot}/integration/support/**",
        "{projectRoot}/cypress.config.ts",
        "{workspaceRoot}/pnpm-lock.yaml",
        "{projectRoot}/package.json"
      ],
      "outputs": [
        "{projectRoot}/cypress/**/*"
      ]
    },
    "start-integration": {
      "description": "Start the application for integration testing",
      "continuous": true,
      "cache": false,
      "dependsOn": [
        "build"
      ]
    },
    "start-login-only": {
      "description": "Start the standalone production build without starting the core service",
      "continuous": true,
      "cache": false,
      "dependsOn": [
        "env-local",
        "build"
      ],
      "executor": "nx:run-script",
      "options": {
        "script": "start"
      }
    }
  }
}