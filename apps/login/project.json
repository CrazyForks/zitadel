{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "targets": {
    "build": {
      "description": "Build the Next.js application in standalone mode for production. (Cache is disabled because it doesn't work https://github.com/nrwl/nx/issues/27724)",
      "cache": true,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "default",
        "{workspaceRoot}/pnpm-lock.yaml",
        "!{projectRoot}/integration/**/*",
        "!{projectRoot}/acceptance/**/*",
        "!{projectRoot}/cypress.config.ts"
      ],
      "outputs": [
        "{projectRoot}/.next/standalone"
      ]
    },
    "build-docker": {
      "description": "Build Docker image for the login application",
      "inputs": [
        "docker"
      ],
      "dependsOn": [
        "build"
      ]
    },
    "start-docker": {
      "description": "Start the application in Docker container",
      "continuous": true,
      "options": {
        "args": [
          "--publish",
          "3000:3000"
        ]
      }
    },
    "dev": {
      "description": "Start the Next.js development server with Zitadel core backend",
      "configurations": {
        "local": {
          "dependsOn": [
            "@zitadel/core:build",
            "@zitadel/core:start-setup",
            "local-sa-token",
            "@zitadel/core:start",
            "@zitadel/console:build",
            "@zitadel/console:start"
          ]
        },
        "custom": {}
      }
    },
    "check": {
      "description": "Run code quality checks (linting, formatting, testing and building)"
    },
    "lint": {
      "description": "Run all linters",
      "dependsOn": [
        "lint-check-*"
      ]
    },
    "lint-check-prettier": {
        "inputs": [
          "prettier",
          "{projectRoot}/constants/**/*",
          "{projectRoot}/src/**/*",
          "{projectRoot}/locales/**/*",
          "{projectRoot}/scripts/healthcheck.js"
        ]
    },
    "test-unit": {
      "description": "Run unit tests",
      "dependsOn": [
        "^build"
      ]
    },
    "start": {
      "description": "Start the login service via Docker Compose with environment passthrough",
      "continuous": true,
      "command": "nx run @zitadel/devcontainer:compose up --no-deps --watch login"
    },
    "test-integration-env-build": {
      "description": "Build the login and the core mock server to run the integration tests",
      "command": "nx run @zitadel/devcontainer:compose build login-core-mock login",
      "dependsOn": [
        "build"
      ]
    },
    "test-integration-env-start": {
      "description": "Start the login and the core mock server to run the integration tests",
      "continuous": true,
      "command": "nx run @zitadel/devcontainer:compose up --no-deps --build --watch login-core-mock login",
      "dependsOn": [
        "test-integration-env-build"
      ],
      "options": {
        "env": {
          "LOGIN_ENV_FILE": "{projectRoot}/.env.test-integration-env"
        }
      }
    },
    "test-integration": {
      "cache": true,
      "dependsOn": [
        "build",
        "test-integration-env-start"
      ],
      "inputs": [
        "{projectRoot}/integration/integration/**",
        "{projectRoot}/integration/support/**",
        "{projectRoot}/cypress.config.ts"
      ]
    }
  }
}