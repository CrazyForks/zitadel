{
  "$schema": "../../node_modules/nx/schemas/project-schema.json",
  "namedInputs": {
    "envVars": [
      {
        "env": "DEBUG"
      },
      {
        "env": "EMAIL_VERIFICATION"
      },
      {
        "env": "AUDIENCE"
      },
      {
        "env": "SYSTEM_USER_ID"
      },
      {
        "env": "SYSTEM_USER_PRIVATE_KEY"
      },
      {
        "env": "ZITADEL_API_URL"
      },
      {
        "env": "ZITADEL_SERVICE_USER_TOKEN"
      },
      {
        "env": "NEXT_PUBLIC_BASE_PATH"
      },
      {
        "env": "CUSTOM_REQUEST_HEADERS"
      },
      {
        "env": "NODE_ENV"
      },
      {
        "env": "PORT"
      },
      {
        "env": "INKEEP_API_KEY"
      }
    ]
  },
  "targets": {
    "env-local": {
      "description": "Generate environment files with ZITADEL service user token",
      "cache": true,
      "inputs": [
        "{workspaceRoot}/login-client.pat"
      ],
      "outputs": [
        "{projectRoot}/.env.local",
        "{projectRoot}/dist/.env.local"
      ],
      "dependsOn": [
        "@zitadel/core:start-setup"
      ],
      "executor": "nx:run-commands",
      "options": {
        "cwd": "{projectRoot}",
        "commands": [
          "mkdir -p dist",
          "TOKEN=$(cat ../../login-client.pat) && echo \"ZITADEL_SERVICE_USER_TOKEN=$TOKEN\" | tee .env.local dist/.env.local > /dev/null"
        ]
      }
    },
    "build": {
      "description": "Build the Next.js application for production",
      "cache": false,
      "dependsOn": [
        "^build"
      ],
      "inputs": [
        "default",
        "!{projectRoot}/.next/**/*"
      ],
      "outputs": [
        "{projectRoot}/dist/**/*",
        "!{projectRoot}/dist/.env.*local"
      ]
    },
    "dev": {
      "description": "Start the Next.js development server with ZITADEL backend",
      "dependsOn": [
        "env-local",
        "@zitadel/core:start"
      ]
    },
    "start": {
      "description": "Start the standalone production build",
      "dependsOn": [
        "env-local",
        "@zitadel/core:start"
      ]
    },
    "build-docker": {
      "description": "Build Docker image for the login application",
      "dependsOn": [
        "build"
      ],
      "inputs": [
        "docker"
      ]
    },
    "start-docker": {
      "description": "Start the application in Docker container",
      "continuous": true,
      "options": {
        "args": [
          "--publish",
          "3000:3000"
        ]
      }
    },
    "check": {
      "description": "Run code quality checks (linting, formatting, etc.)"
    },
    "test-unit": {
      "description": "Run unit tests",
      "dependsOn": [
        "^build"
      ]
    },
    "test-integration": {
      "description": "Run integration tests with Cypress",
      "dependsOn": [
        "@zitadel/core-mock:start-docker",
        "start-integration"
      ],
      "inputs": [
        "{projectRoot}/integration/integration/**",
        "{projectRoot}/integration/support/**",
        "{projectRoot}/cypress.config.ts",
        "{workspaceRoot}/pnpm-lock.yaml",
        "{projectRoot}/package.json"
      ],
      "outputs": [
        "{projectRoot}/cypress/**/*"
      ]
    },
    "start-integration": {
      "description": "Start the application for integration testing",
      "continuous": true,
      "cache": false,
      "dependsOn": [
        "build"
      ]
    }
  }
}