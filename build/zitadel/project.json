{
    "$schema": "../../node_modules/nx/schemas/project-schema.json",
    "name": "@zitadel/core",
    "projectType": "application",
    "targets": {
        "build": {
            "command": "make core_build compile_pipeline",
            "inputs": [
                "{workspaceRoot}/cmd/**/*",
                "{workspaceRoot}/internal/**/*",
                "{workspaceRoot}/pkg/**/*",
                "{workspaceRoot}/Makefile",
                "{workspaceRoot}/go.mod",
                "{workspaceRoot}/go.sum",
                "{workspaceRoot}/main.go"
            ],
            "outputs": [
                "{workspaceRoot}/zitadel"
            ],
            "dependsOn": [
                "@zitadel/console:build"
            ]
        },
        "start-db": {
            "command": "docker rm -f zitadel-postgres || true; docker run --name zitadel-postgres --rm -p 5432:5432 --env-file ./postgres.env -v ./postgresql.conf:/etc/postgresql/postgresql.conf -v zitadel-postgres-data:/var/lib/postgresql/data postgres:latest postgres -c config_file=/etc/postgresql/postgresql.conf",
            "options": {
                "cwd": "{projectRoot}"
            },
            "continuous": true
        },
        "wait-for-db": {
            "dependsOn": [
                "start-db"
            ],
            "command": "until docker exec zitadel-postgres pg_isready -U postgres; do echo 'Waiting for PostgreSQL...'; sleep 2; done",
        },
        "start-init": {
            "dependsOn": [
                "build",
                "wait-for-db"
            ],
            "options": {
                "env": {
                    "CONFIG_FILE": "{projectRoot}/zitadel.yaml"
                }
            },
            "command": "./zitadel init --config ${CONFIG_FILE}"
        },
        "start-setup": {
            "dependsOn": [
                "start-init"
            ],
            "options": {
                "env": {
                    "CONFIG_FILE": "{projectRoot}/zitadel.yaml"
                }
            },
            "outputs": [
                "{workspaceRoot}/login-client.pat"
            ],
            "command": "./zitadel setup --config ${CONFIG_FILE} --steps ${CONFIG_FILE} --masterkey \"MasterkeyNeedsToHave32Characters\""
        },
        "start": {
            "dependsOn": [
                "start-setup"
            ],
            "options": {
                "env": {
                    "CONFIG_FILE": "{projectRoot}/zitadel.yaml"
                }
            },
            "continuous": true,
            "command": "./zitadel start --config ${CONFIG_FILE} --masterkey \"MasterkeyNeedsToHave32Characters\""
        }
    }
}